steps:
  # Fetch cache archive
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: '/bin/bash'
    args:
      [
        '-c',
        'gcloud storage cp gs://${_CACHE_BUCKET_NAME}/caches/caf-web/node_modules.tar.gz . || exit 0',
      ]

  # Unzip cache
  - name: bash
    args: ['-c', 'tar xzf node_modules.tar.gz || exit 0']

  # Install deps
  - name: node:18
    id: 'yarn-install'
    entrypoint: yarn
    args: ['install', '--frozen-lockfile']

  # Build app
  - name: node:18
    entrypoint: yarn
    args: ['build']
    env:
      - 'NEXT_PUBLIC_HOST_URL=https://gendai-art.org'
      - 'NEXT_PUBLIC_BASE_PATH=/caf/inada'
      - 'NEXT_GTAG_TRACKING_ID=G-RL974H0D69'

  # Clear public storage if objects are exists
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: '/bin/bash'
    args:
      ['-c', 'gcloud storage rm -a gs://${_PUBLIC_BUCKET_NAME}/** || exit 0']

  # Upload to public storage
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: 'gcloud'
    args: ['storage', 'cp', '-r', './out/*', 'gs://${_PUBLIC_BUCKET_NAME}/']

  # Zip node_modules
  - name: bash
    id: 'archive node_modules'
    args: ['tar', 'czf', 'node_modules.tar.gz', 'node_modules']
    waitFor: ['yarn-install']

  # Cache node_modules archive
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: 'gcloud'
    waitFor: ['archive node_modules']
    args:
      [
        'storage',
        'cp',
        'node_modules.tar.gz',
        'gs://${_CACHE_BUCKET_NAME}/caches/caf-web/',
      ]

substitutions:
  _PUBLIC_BUCKET_NAME: caf-ushio-web
  _CACHE_BUCKET_NAME: ushio-tide_cloudbuild
